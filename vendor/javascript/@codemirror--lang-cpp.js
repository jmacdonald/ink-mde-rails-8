// @codemirror/lang-cpp@6.0.2 downloaded from https://ga.jspm.io/npm:@codemirror/lang-cpp@6.0.2/dist/index.js

import{parser as e}from"@lezer/cpp";import{LRLanguage as t,indentNodeProp as n,continuedIndent as o,flatIndent as a,delimitedIndent as r,foldNodeProp as c,foldInside as m,LanguageSupport as i}from"@codemirror/language";const p=t.define({name:"cpp",parser:e.configure({props:[n.add({IfStatement:o({except:/^\s*({|else\b)/}),TryStatement:o({except:/^\s*({|catch)\b/}),LabeledStatement:a,CaseStatement:e=>e.baseIndent+e.unit,BlockComment:()=>null,CompoundStatement:r({closing:"}"}),Statement:o({except:/^{/})}),c.add({"DeclarationList CompoundStatement EnumeratorList FieldDeclarationList InitializerList":m,BlockComment(e){return{from:e.from+2,to:e.to-2}}})]}),languageData:{commentTokens:{line:"//",block:{open:"/*",close:"*/"}},indentOnInput:/^\s*(?:case |default:|\{|\})$/,closeBrackets:{stringPrefixes:["L","u","U","u8","LR","UR","uR","u8R","R"]}}});function cpp(){return new i(p)}export{cpp,p as cppLanguage};

