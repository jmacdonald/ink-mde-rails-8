// @codemirror/legacy-modes/mode/xquery@6.4.2 downloaded from https://ga.jspm.io/npm:@codemirror/legacy-modes@6.4.2/mode/xquery.js

var e=function(){function kw(e){return{type:e,style:"keyword"}}var e=kw("operator"),t={type:"atom",style:"atom"},n={type:"punctuation",style:null},a={type:"axis_specifier",style:"qualifier"};var r={",":n};var i=["after","all","allowing","ancestor","ancestor-or-self","any","array","as","ascending","at","attribute","base-uri","before","boundary-space","by","case","cast","castable","catch","child","collation","comment","construction","contains","content","context","copy","copy-namespaces","count","decimal-format","declare","default","delete","descendant","descendant-or-self","descending","diacritics","different","distance","document","document-node","element","else","empty","empty-sequence","encoding","end","entire","every","exactly","except","external","first","following","following-sibling","for","from","ftand","ftnot","ft-option","ftor","function","fuzzy","greatest","group","if","import","in","inherit","insensitive","insert","instance","intersect","into","invoke","is","item","language","last","lax","least","let","levels","lowercase","map","modify","module","most","namespace","next","no","node","nodes","no-inherit","no-preserve","not","occurs","of","only","option","order","ordered","ordering","paragraph","paragraphs","parent","phrase","preceding","preceding-sibling","preserve","previous","processing-instruction","relationship","rename","replace","return","revalidation","same","satisfies","schema","schema-attribute","schema-element","score","self","sensitive","sentence","sentences","sequence","skip","sliding","some","stable","start","stemming","stop","strict","strip","switch","text","then","thesaurus","times","to","transform","treat","try","tumbling","type","typeswitch","union","unordered","update","updating","uppercase","using","validate","value","variable","version","weight","when","where","wildcards","window","with","without","word","words","xquery"];for(var s=0,o=i.length;s<o;s++)r[i[s]]=kw(i[s]);var c=["xs:anyAtomicType","xs:anySimpleType","xs:anyType","xs:anyURI","xs:base64Binary","xs:boolean","xs:byte","xs:date","xs:dateTime","xs:dateTimeStamp","xs:dayTimeDuration","xs:decimal","xs:double","xs:duration","xs:ENTITIES","xs:ENTITY","xs:float","xs:gDay","xs:gMonth","xs:gMonthDay","xs:gYear","xs:gYearMonth","xs:hexBinary","xs:ID","xs:IDREF","xs:IDREFS","xs:int","xs:integer","xs:item","xs:java","xs:language","xs:long","xs:Name","xs:NCName","xs:negativeInteger","xs:NMTOKEN","xs:NMTOKENS","xs:nonNegativeInteger","xs:nonPositiveInteger","xs:normalizedString","xs:NOTATION","xs:numeric","xs:positiveInteger","xs:precisionDecimal","xs:QName","xs:short","xs:string","xs:time","xs:token","xs:unsignedByte","xs:unsignedInt","xs:unsignedLong","xs:unsignedShort","xs:untyped","xs:untypedAtomic","xs:yearMonthDuration"];for(s=0,o=c.length;s<o;s++)r[c[s]]=t;var u=["eq","ne","lt","le","gt","ge",":=","=",">",">=","<","<=",".","|","?","and","or","div","idiv","mod","*","/","+","-"];for(s=0,o=u.length;s<o;s++)r[u[s]]=e;var l=["self::","attribute::","child::","descendant::","descendant-or-self::","parent::","ancestor::","ancestor-or-self::","following::","preceding::","following-sibling::","preceding-sibling::"];for(s=0,o=l.length;s<o;s++)r[l[s]]=a;return r}();function chain(e,t,n){t.tokenize=n;return n(e,t)}function tokenBase(t,n){var a=t.next(),r=false,i=isEQNameAhead(t);if(a=="<"){if(t.match("!--",true))return chain(t,n,tokenXMLComment);if(t.match("![CDATA",false)){n.tokenize=tokenCDATA;return"tag"}if(t.match("?",false))return chain(t,n,tokenPreProcessing);var s=t.eat("/");t.eatSpace();var o,c="";while(o=t.eat(/[^\s\u00a0=<>\"\'\/?]/))c+=o;return chain(t,n,tokenTag(c,s))}if(a=="{"){pushStateStack(n,{type:"codeblock"});return null}if(a=="}"){popStateStack(n);return null}if(isInXmlBlock(n)){if(a==">")return"tag";if(a=="/"&&t.eat(">")){popStateStack(n);return"tag"}return"variable"}if(/\d/.test(a)){t.match(/^\d*(?:\.\d*)?(?:E[+\-]?\d+)?/);return"atom"}if(a==="("&&t.eat(":")){pushStateStack(n,{type:"comment"});return chain(t,n,tokenComment)}if(i||a!=='"'&&a!=="'"){if(a==="$")return chain(t,n,tokenVariable);if(a===":"&&t.eat("="))return"keyword";if(a==="("){pushStateStack(n,{type:"paren"});return null}if(a===")"){popStateStack(n);return null}if(a==="["){pushStateStack(n,{type:"bracket"});return null}if(a==="]"){popStateStack(n);return null}var u=e.propertyIsEnumerable(a)&&e[a];if(i&&a==='"')while(t.next()!=='"');if(i&&a==="'")while(t.next()!=="'");u||t.eatWhile(/[\w\$_-]/);var l=t.eat(":");!t.eat(":")&&l&&t.eatWhile(/[\w\$_-]/);t.match(/^[ \t]*\(/,false)&&(r=true);var p=t.current();u=e.propertyIsEnumerable(p)&&e[p];r&&!u&&(u={type:"function_call",style:"def"});if(isInXmlConstructor(n)){popStateStack(n);return"variable"}p!="element"&&p!="attribute"&&u.type!="axis_specifier"||pushStateStack(n,{type:"xmlconstructor"});return u?u.style:"variable"}return chain(t,n,tokenString(a))}function tokenComment(e,t){var n,a=false,r=false,i=0;while(n=e.next()){if(n==")"&&a){if(!(i>0)){popStateStack(t);break}i--}else n==":"&&r&&i++;a=n==":";r=n=="("}return"comment"}function tokenString(e,t){return function(n,a){var r;if(isInString(a)&&n.current()==e){popStateStack(a);t&&(a.tokenize=t);return"string"}pushStateStack(a,{type:"string",name:e,tokenize:tokenString(e,t)});if(n.match("{",false)&&isInXmlAttributeBlock(a)){a.tokenize=tokenBase;return"string"}while(r=n.next()){if(r==e){popStateStack(a);t&&(a.tokenize=t);break}if(n.match("{",false)&&isInXmlAttributeBlock(a)){a.tokenize=tokenBase;return"string"}}return"string"}}function tokenVariable(e,t){var n=/[\w\$_-]/;if(e.eat('"')){while(e.next()!=='"');e.eat(":")}else{e.eatWhile(n);e.match(":=",false)||e.eat(":")}e.eatWhile(n);t.tokenize=tokenBase;return"variable"}function tokenTag(e,t){return function(n,a){n.eatSpace();if(t&&n.eat(">")){popStateStack(a);a.tokenize=tokenBase;return"tag"}n.eat("/")||pushStateStack(a,{type:"tag",name:e,tokenize:tokenBase});if(!n.eat(">")){a.tokenize=tokenAttribute;return"tag"}a.tokenize=tokenBase;return"tag"}}function tokenAttribute(e,t){var n=e.next();if(n=="/"&&e.eat(">")){isInXmlAttributeBlock(t)&&popStateStack(t);isInXmlBlock(t)&&popStateStack(t);return"tag"}if(n==">"){isInXmlAttributeBlock(t)&&popStateStack(t);return"tag"}if(n=="=")return null;if(n=='"'||n=="'")return chain(e,t,tokenString(n,tokenAttribute));isInXmlAttributeBlock(t)||pushStateStack(t,{type:"attribute",tokenize:tokenAttribute});e.eat(/[a-zA-Z_:]/);e.eatWhile(/[-a-zA-Z0-9_:.]/);e.eatSpace();if(e.match(">",false)||e.match("/",false)){popStateStack(t);t.tokenize=tokenBase}return"attribute"}function tokenXMLComment(e,t){var n;while(n=e.next())if(n=="-"&&e.match("->",true)){t.tokenize=tokenBase;return"comment"}}function tokenCDATA(e,t){var n;while(n=e.next())if(n=="]"&&e.match("]",true)){t.tokenize=tokenBase;return"comment"}}function tokenPreProcessing(e,t){var n;while(n=e.next())if(n=="?"&&e.match(">",true)){t.tokenize=tokenBase;return"processingInstruction"}}function isInXmlBlock(e){return isIn(e,"tag")}function isInXmlAttributeBlock(e){return isIn(e,"attribute")}function isInXmlConstructor(e){return isIn(e,"xmlconstructor")}function isInString(e){return isIn(e,"string")}function isEQNameAhead(e){return e.current()==='"'?e.match(/^[^\"]+\"\:/,false):e.current()==="'"&&e.match(/^[^\"]+\'\:/,false)}function isIn(e,t){return e.stack.length&&e.stack[e.stack.length-1].type==t}function pushStateStack(e,t){e.stack.push(t)}function popStateStack(e){e.stack.pop();var t=e.stack.length&&e.stack[e.stack.length-1].tokenize;e.tokenize=t||tokenBase}const t={name:"xquery",startState:function(){return{tokenize:tokenBase,cc:[],stack:[]}},token:function(e,t){if(e.eatSpace())return null;var n=t.tokenize(e,t);return n},languageData:{commentTokens:{block:{open:"(:",close:":)"}}}};export{t as xQuery};

