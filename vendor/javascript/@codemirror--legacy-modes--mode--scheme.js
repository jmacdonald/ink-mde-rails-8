// @codemirror/legacy-modes/mode/scheme@6.4.2 downloaded from https://ga.jspm.io/npm:@codemirror/legacy-modes@6.4.2/mode/scheme.js

var e="builtin",t="comment",a="string",n="symbol",r="atom",i="number",s="bracket";var c=2;function makeKeywords(e){var t={},a=e.split(" ");for(var n=0;n<a.length;++n)t[a[n]]=true;return t}var l=makeKeywords("Î» case-lambda call/cc class cond-expand define-class define-values exit-handler field import inherit init-field interface let*-values let-values let/ec mixin opt-lambda override protect provide public rename require require-for-syntax syntax syntax-case syntax-error unit/sig unless when with-syntax and begin call-with-current-continuation call-with-input-file call-with-output-file case cond define define-syntax define-macro defmacro delay do dynamic-wind else for-each if lambda let let* let-syntax letrec letrec-syntax map or syntax-rules abs acos angle append apply asin assoc assq assv atan boolean? caar cadr call-with-input-file call-with-output-file call-with-values car cdddar cddddr cdr ceiling char->integer char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? char-downcase char-lower-case? char-numeric? char-ready? char-upcase char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? char? close-input-port close-output-port complex? cons cos current-input-port current-output-port denominator display eof-object? eq? equal? eqv? eval even? exact->inexact exact? exp expt #f floor force gcd imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment lcm length list list->string list->vector list-ref list-tail list? load log magnitude make-polar make-rectangular make-string make-vector max member memq memv min modulo negative? newline not null-environment null? number->string number? numerator odd? open-input-file open-output-file output-port? pair? peek-char port? positive? procedure? quasiquote quote quotient rational? rationalize read read-char real-part real? remainder reverse round scheme-report-environment set! set-car! set-cdr! sin sqrt string string->list string->number string->symbol string-append string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? string-copy string-fill! string-length string-ref string-set! string<=? string<? string=? string>=? string>? string? substring symbol->string symbol? #t tan transcript-off transcript-on truncate values vector vector->list vector-fill! vector-length vector-ref vector-set! with-input-from-file with-output-to-file write write-char zero?");var o=makeKeywords("define let letrec let* lambda define-macro defmacro let-syntax letrec-syntax let-values let*-values define-syntax syntax-rules define-values when unless");function stateStack(e,t,a){this.indent=e;this.type=t;this.prev=a}function pushStack(e,t,a){e.indentStack=new stateStack(t,a,e.indentStack)}function popStack(e){e.indentStack=e.indentStack.prev}var d=new RegExp(/^(?:[-+]i|[-+][01]+#*(?:\/[01]+#*)?i|[-+]?[01]+#*(?:\/[01]+#*)?@[-+]?[01]+#*(?:\/[01]+#*)?|[-+]?[01]+#*(?:\/[01]+#*)?[-+](?:[01]+#*(?:\/[01]+#*)?)?i|[-+]?[01]+#*(?:\/[01]+#*)?)(?=[()\s;"]|$)/i);var u=new RegExp(/^(?:[-+]i|[-+][0-7]+#*(?:\/[0-7]+#*)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?@[-+]?[0-7]+#*(?:\/[0-7]+#*)?|[-+]?[0-7]+#*(?:\/[0-7]+#*)?[-+](?:[0-7]+#*(?:\/[0-7]+#*)?)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?)(?=[()\s;"]|$)/i);var m=new RegExp(/^(?:[-+]i|[-+][\da-f]+#*(?:\/[\da-f]+#*)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?@[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?[-+](?:[\da-f]+#*(?:\/[\da-f]+#*)?)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?)(?=[()\s;"]|$)/i);var p=new RegExp(/^(?:[-+]i|[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)i|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)@[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)?i|(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*))(?=[()\s;"]|$)/i);function isBinaryNumber(e){return e.match(d)}function isOctalNumber(e){return e.match(u)}function isDecimalNumber(e,t){t===true&&e.backUp(1);return e.match(p)}function isHexNumber(e){return e.match(m)}function processEscapedSequence(e,t){var a,n=false;while((a=e.next())!=null){if(a==t.token&&!n){t.state.mode=false;break}n=!n&&a=="\\"}}const f={name:"scheme",startState:function(){return{indentStack:null,indentation:0,mode:false,sExprComment:false,sExprQuote:false}},token:function(d,u){u.indentStack==null&&d.sol()&&(u.indentation=d.indentation());if(d.eatSpace())return null;var m=null;switch(u.mode){case"string":processEscapedSequence(d,{token:'"',state:u});m=a;break;case"symbol":processEscapedSequence(d,{token:"|",state:u});m=n;break;case"comment":var p,f=false;while((p=d.next())!=null){if(p=="#"&&f){u.mode=false;break}f=p=="|"}m=t;break;case"s-expr-comment":u.mode=false;if(d.peek()!="("&&d.peek()!="["){d.eatWhile(/[^\s\(\)\[\]]/);m=t;break}u.sExprComment=0;default:var h=d.next();if(h=='"'){u.mode="string";m=a}else if(h=="'")if(d.peek()=="("||d.peek()=="["){typeof u.sExprQuote!="number"&&(u.sExprQuote=0);m=r}else{d.eatWhile(/[\w_\-!$%&*+\.\/:<=>?@\^~]/);m=r}else if(h=="|"){u.mode="symbol";m=n}else if(h=="#")if(d.eat("|")){u.mode="comment";m=t}else if(d.eat(/[tf]/i))m=r;else if(d.eat(";")){u.mode="s-expr-comment";m=t}else{var x=null,b=false,g=true;d.eat(/[ei]/i)?b=true:d.backUp(1);if(d.match(/^#b/i))x=isBinaryNumber;else if(d.match(/^#o/i))x=isOctalNumber;else if(d.match(/^#x/i))x=isHexNumber;else if(d.match(/^#d/i))x=isDecimalNumber;else if(d.match(/^[-+0-9.]/,false)){g=false;x=isDecimalNumber}else b||d.eat("#");if(x!=null){g&&!b&&d.match(/^#[ei]/i);x(d)&&(m=i)}}else if(/^[-+0-9.]/.test(h)&&isDecimalNumber(d,true))m=i;else if(h==";"){d.skipToEnd();m=t}else if(h=="("||h=="["){var k="";var v,y=d.column();while((v=d.eat(/[^\s\(\[\;\)\]]/))!=null)k+=v;if(k.length>0&&o.propertyIsEnumerable(k))pushStack(u,y+c,h);else{d.eatSpace();d.eol()||d.peek()==";"?pushStack(u,y+1,h):pushStack(u,y+d.current().length,h)}d.backUp(d.current().length-1);typeof u.sExprComment=="number"&&u.sExprComment++;typeof u.sExprQuote=="number"&&u.sExprQuote++;m=s}else if(h==")"||h=="]"){m=s;if(u.indentStack!=null&&u.indentStack.type==(h==")"?"(":"[")){popStack(u);if(typeof u.sExprComment=="number"&&--u.sExprComment==0){m=t;u.sExprComment=false}if(typeof u.sExprQuote=="number"&&--u.sExprQuote==0){m=r;u.sExprQuote=false}}}else{d.eatWhile(/[\w_\-!$%&*+\.\/:<=>?@\^~]/);m=l&&l.propertyIsEnumerable(d.current())?e:"variable"}}return typeof u.sExprComment=="number"?t:typeof u.sExprQuote=="number"?r:m},indent:function(e){return e.indentStack==null?e.indentation:e.indentStack.indent},languageData:{closeBrackets:{brackets:["(","[","{",'"']},commentTokens:{line:";;"}}};export{f as scheme};

