// @codemirror/legacy-modes/mode/apl@6.4.2 downloaded from https://ga.jspm.io/npm:@codemirror/legacy-modes@6.4.2/mode/apl.js

var e={"+":["conjugate","add"],"−":["negate","subtract"],"×":["signOf","multiply"],"÷":["reciprocal","divide"],"⌈":["ceiling","greaterOf"],"⌊":["floor","lesserOf"],"∣":["absolute","residue"],"⍳":["indexGenerate","indexOf"],"?":["roll","deal"],"⋆":["exponentiate","toThePowerOf"],"⍟":["naturalLog","logToTheBase"],"○":["piTimes","circularFuncs"],"!":["factorial","binomial"],"⌹":["matrixInverse","matrixDivide"],"<":[null,"lessThan"],"≤":[null,"lessThanOrEqual"],"=":[null,"equals"],">":[null,"greaterThan"],"≥":[null,"greaterThanOrEqual"],"≠":[null,"notEqual"],"≡":["depth","match"],"≢":[null,"notMatch"],"∈":["enlist","membership"],"⍷":[null,"find"],"∪":["unique","union"],"∩":[null,"intersection"],"∼":["not","without"],"∨":[null,"or"],"∧":[null,"and"],"⍱":[null,"nor"],"⍲":[null,"nand"],"⍴":["shapeOf","reshape"],",":["ravel","catenate"],"⍪":[null,"firstAxisCatenate"],"⌽":["reverse","rotate"],"⊖":["axis1Reverse","axis1Rotate"],"⍉":["transpose",null],"↑":["first","take"],"↓":[null,"drop"],"⊂":["enclose","partitionWithAxis"],"⊃":["diclose","pick"],"⌷":[null,"index"],"⍋":["gradeUp",null],"⍒":["gradeDown",null],"⊤":["encode",null],"⊥":["decode",null],"⍕":["format","formatByExample"],"⍎":["execute",null],"⊣":["stop","left"],"⊢":["pass","right"]};var t=/[\.\/⌿⍀¨⍣]/;var r=/⍬/;var n=/[\+−×÷⌈⌊∣⍳\?⋆⍟○!⌹<≤=>≥≠≡≢∈⍷∪∩∼∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⌷⍋⍒⊤⊥⍕⍎⊣⊢]/;var a=/←/;var l=/[⍝#].*$/;var stringEater=function(e){var t;t=false;return function(r){t=r;return r!==e||t==="\\"}};const u={name:"apl",startState:function(){return{prev:false,func:false,op:false,string:false,escape:false}},token:function(u,i){var s;if(u.eatSpace())return null;s=u.next();if(s==='"'||s==="'"){u.eatWhile(stringEater(s));u.next();i.prev=true;return"string"}if(/[\[{\(]/.test(s)){i.prev=false;return null}if(/[\]}\)]/.test(s)){i.prev=true;return null}if(r.test(s)){i.prev=false;return"atom"}if(/[¯\d]/.test(s)){if(i.func){i.func=false;i.prev=false}else i.prev=true;u.eatWhile(/[\w\.]/);return"number"}if(t.test(s))return"operator";if(a.test(s))return"operator";if(n.test(s)){i.func=true;i.prev=false;return e[s]?"variableName.function.standard":"variableName.function"}if(l.test(s)){u.skipToEnd();return"comment"}if(s==="∘"&&u.peek()==="."){u.next();return"variableName.function"}u.eatWhile(/[\w\$_]/);i.prev=true;return"keyword"}};export{u as apl};

