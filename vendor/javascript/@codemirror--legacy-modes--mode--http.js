// @codemirror/legacy-modes/mode/http@6.4.2 downloaded from https://ga.jspm.io/npm:@codemirror/legacy-modes@6.4.2/mode/http.js

function failFirstLine(r,t){r.skipToEnd();t.cur=header;return"error"}function start(r,t){if(r.match(/^HTTP\/\d\.\d/)){t.cur=responseStatusCode;return"keyword"}if(r.match(/^[A-Z]+/)&&/[ \t]/.test(r.peek())){t.cur=requestPath;return"keyword"}return failFirstLine(r,t)}function responseStatusCode(r,t){var e=r.match(/^\d+/);if(!e)return failFirstLine(r,t);t.cur=responseStatusText;var n=Number(e[0]);return n>=100&&n<400?"atom":"error"}function responseStatusText(r,t){r.skipToEnd();t.cur=header;return null}function requestPath(r,t){r.eatWhile(/\S/);t.cur=requestProtocol;return"string.special"}function requestProtocol(r,t){if(r.match(/^HTTP\/\d\.\d$/)){t.cur=header;return"keyword"}return failFirstLine(r,t)}function header(r){if(r.sol()&&!r.eat(/[ \t]/)){if(r.match(/^.*?:/))return"atom";r.skipToEnd();return"error"}r.skipToEnd();return"string"}function body(r){r.skipToEnd();return null}const r={name:"http",token:function(r,t){var e=t.cur;return e!=header&&e!=body&&r.eatSpace()?null:e(r,t)},blankLine:function(r){r.cur=body},startState:function(){return{cur:start}}};export{r as http};

