// @codemirror/legacy-modes/mode/protobuf@6.4.2 downloaded from https://ga.jspm.io/npm:@codemirror/legacy-modes@6.4.2/mode/protobuf.js

function wordRegexp(e){return new RegExp("^(("+e.join(")|(")+"))\\b","i")}var e=["package","message","import","syntax","required","optional","repeated","reserved","default","extensions","packed","bool","bytes","double","enum","float","string","int32","int64","uint32","uint64","sint32","sint64","fixed32","fixed64","sfixed32","sfixed64","option","service","rpc","returns"];var t=wordRegexp(e);var n=new RegExp("^[_A-Za-z¡-￿][_A-Za-z0-9¡-￿]*");function tokenBase(e){if(e.eatSpace())return null;if(e.match("//")){e.skipToEnd();return"comment"}if(e.match(/^[0-9\.+-]/,false)){if(e.match(/^[+-]?0x[0-9a-fA-F]+/))return"number";if(e.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?/))return"number";if(e.match(/^[+-]?\d+([EeDd][+-]?\d+)?/))return"number"}if(e.match(/^"([^"]|(""))*"/))return"string";if(e.match(/^'([^']|(''))*'/))return"string";if(e.match(t))return"keyword";if(e.match(n))return"variable";e.next();return null}const r={name:"protobuf",token:tokenBase,languageData:{autocomplete:e}};export{r as protobuf};

